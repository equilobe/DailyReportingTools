<div style="margin-top:15px">
      @if(Model.options.FromDate==Model.options.ToDate)
        {
           <h2> @Model.Title Daily Report for @Model.Date.ToString("dddd, dd MMMM yyyy") </h2>
        }
        else
        {
           <h2>@Model.Title Daily Report for @Model.options.FromDate.ToString("dddd, dd MMMM yyyy") - @Model.options.ToDate.ToString("dddd, dd MMMM yyyy")</h2>
        }  
    @{
        var bold = "";
        var remainingEstimate = "";
        var openParentheses = "";
        var closedParantheses = "";
        var color="black";
        var font="";
    }
  
    <div style="margin-top: 40px">
        <div>
            <h2>Timesheet</h2>

            @if (Model.Authors.Count == 0)
            {
                <span  style="margin-top:20px"><b>No work logged</b></span>
            }
            else
            {
                <b> @Model.TotalTime worked</b>
                <div style="margin-top:20px">
                    @foreach (var summary in Model.Summary)
                    {
                        <div>@summary.TimeLogged - @summary.Name</div>
                    }
                </div>
                foreach (var author in Model.Authors)
                {
                    <div style="margin-top:40px">
                        <b>@author.Name - @author.TimeLogged</b>

                        @foreach (var issue in author.Issues)
                        {
                            if (issue.Subtasks.Count > 0)
                            {
                                remainingEstimate = issue.TotalRemaining;
                            }
                            else
                            {
                                remainingEstimate = issue.RemainingEstimate;
                            }
                            <div style="margin-top:10px">
                                <span>@issue.TimeLogged</span>
                                @if (issue.Label != Model.policy.PermanentTaskLabel)
                                {
                                    if (issue.Resolution != null)
                                    {
                                        <span>(@issue.Resolution)</span>
                                    }

                                    else if (issue.RemainingEstimate != null)
                                    {
                                        if (issue.RemainingEstimateSeconds == 0)
                                        {
                                            <span>(<b style="color:red">@remainingEstimate left</b>)</span>
                                        }
                                        else
                                        {
                                            <span> (@remainingEstimate left) </span>
                                        }
                                    }
                                }
                                @if (issue.SubTask == true)
                                {
                                    <span> - <a href=@issue.Parent.Link style="text-decoration: none"> @issue.Parent.Summary </a>(@issue.Parent.Key)/<a href=@issue.Link style="text-decoration: none"> @issue.Summary</a> (@issue.Key) </span>
                                }
                                else
                                {
                                    <span> - <a href=@issue.Link style="text-decoration: none"> @issue.Summary</a> (@issue.Key) </span>
                                }
                                @if (issue.Label != Model.policy.PermanentTaskLabel)
                                {
                                    if (issue.Assignee == null)
                                    {
                                        <span>(Unassigned)</span>
                                    }
                                    else if (issue.Assignee != author.Name)
                                    {
                                        <span>(Assigned to <span style="white-space:nowrap"> @issue.Assignee)</span></span>
                                    }
                                }
                                @foreach (var entry in issue.Entries)
                                {
                                    <div>
                                        @if (entry.Comment != "")
                                        {
                                            <div style="margin-top:10px">
                                                @foreach (string comment in entry.Comment.Split('\n'))
                                                {
                                                    <div style="margin-left:35px"> @comment</div>
                                                }
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        }
                    </div>
                }
            }
            </div>
        </div>


    <div style="margin-top:40px">
        <h2>Sprint status</h2>
            
        @if (Model.SprintReport.CompletedTasksList!=null)
        {
            foreach(var completedTasks in Model.SprintReport.CompletedTasksList)
            {   
                if(DateTime.Compare(completedTasks.Tasks.First().ResolutionDate, Model.options.FromDate)>=0)
                {
                   <div style="margin-top:30px">
                    <h4>Completed @completedTasks.CompletedTimeAgo (@completedTasks.Tasks.Count)</h4>
                    @foreach (var task in completedTasks.Tasks)
                    {

                        if (DateTime.Compare(task.ResolutionDate, Model.options.FromDate) >= 0 && DateTime.Compare(task.ResolutionDate, DateTime.Today) <= 0)
                        {
                            bold = "font-weight: bold;";
                        }
                        else
                        {
                            bold = "font-weight: normal;";
                        }
                        <div style="margin-top: 10px">
                            <span style="font-family: Segoe UI Symbol; @bold;">&#10004;</span>
                            <a style="text-decoration: none; @bold;" href="@task.Issue.Link">@task.Issue.Summary</a>
                            <span style="color: #888"> &#x25cf; @task.Issue.Key </span>
                            @if (task.Issue.Assignee != null)
                            {
                            <span style="white-space:nowrap"> &#x25cf; @task.Issue.Assignee </span>
                            }                       
                        </div>
                    }
               </div>               
                }
                               
            }
        }
            @if (Model.SprintReport.InProgressTasks != null)
            {
                <div style="margin-top:30px">
                    <h4>In progress (@Model.SprintReport.InProgressTasksCount)</h4>
                    @foreach (var task in Model.SprintReport.InProgressTasks)
                    {
                        if (task.Issue.Label != Model.policy.PermanentTaskLabel && task.Issue.SubTask == false)
                        {
                            if (task.Issue.ExistsInTimesheet == true)
                            {
                                bold = "font-weight: bold;";
                            }
                            else
                            {
                                bold = "font-weight: normal;";
                            }

                            if (task.Issue.Subtasks.Count > 0)
                            {
                                remainingEstimate = task.Issue.TotalRemaining;
                            }
                            else
                            {
                                remainingEstimate = task.Issue.RemainingEstimate;
                            }
                            if (task.Issue.RemainingEstimateSeconds == 0)
                            {
                                color = "red";
                            }
                            else
                            {
                                color = "black";
                            }
                            <div style="margin-top: 10px;">
                                <span style="font-family: Segoe UI Symbol; @bold;">&#10065;</span>
                                <a style="text-decoration: none; @bold;" href="@task.Issue.Link">@task.Issue.Summary</a>
                                <span style ="color: #888"> &#x25cf; @task.Issue.Key </span>
                                @if (task.Issue.Assignee != null)
                                {
                                    <span style="white-space:nowrap;"> &#x25cf; @task.Issue.Assignee</span>
                                }
                                @if (task.Issue.TimeSpent > 0)
                                {
                                    <span> &#x25cf; @task.Issue.TimeLogged worked </span>
                                    <span style="color:@color"> &#x25cf; @remainingEstimate left </span>
                                }                                   
                            </div>
                            if (task.Issue.SubtasksIssues != null)
                            {
                                if (task.Issue.SubtasksIssues.Count > 0)
                                {
                                    foreach (var subtask in task.Issue.SubtasksIssues)
                                    {
                                        if (subtask.ExistsInTimesheet == true)
                                        {
                                            bold = "font-weight: bold;";
                                        }
                                        else
                                        {
                                            bold = "font-weight: normal;";
                                        }
                                        if (subtask.RemainingEstimateSeconds == 0)
                                        {
                                            color = "red";
                                        }
                                        else
                                        {
                                            color = "black";
                                        }                                 
                                        <div style="margin-top:10px; margin-left:20px;">
                                            <span style="font-family: Segoe UI Symbol">
                                                @if (subtask.Resolution != null)
                                                {
                                                    <span style="@bold;">&#10004;</span>
                                                }
                                                else
                                                { <span>&#10065;</span>}

                                            </span>
                                            <a style="text-decoration: none; @bold;" href="@subtask.Link">@subtask.Summary</a>
                                            <span style="color:#888;"> &#x25cf; @subtask.Key </span>
                                            @if (subtask.Assignee != null)
                                            {
                                                <span style="font-size:13px;white-space:nowrap;"> &#x25cf; @subtask.Assignee</span>
                                            }
                                            @if (subtask.TimeSpent > 0)
                                            {
                                                <span> &#x25cf; @subtask.TimeLogged worked </span>
                                                if (subtask.Resolution == null)
                                                {
                                                    <span style="color:@color;"> &#x25cf; @subtask.RemainingEstimate left </span>
                                                }
                                            }
                                          
                                            @if(subtask.Resolution!=null)
                                            {
                                                <i style="white-space:nowrap; font-weight:bold"> &#x25cf; @subtask.Status</i>
                                            }
                                            else
                                            {
                                                 <i style="white-space:nowrap; font-weight:normal"> &#x25cf; @subtask.Status</i>
                                            }
                                           
                                        </div>

                                    }
                                }
                            }

                        }
                    }
                </div>
            }

            @if (Model.SprintReport.OpenTasks != null)
            {
                <div style="margin-top:30px;">
                    <h4>Upcoming (@Model.SprintReport.OpenTasksCount)</h4>
                    @foreach (var task in Model.SprintReport.OpenTasks)
                    {
                        if (task.Issue.Label != Model.policy.PermanentTaskLabel && task.Issue.SubTask == false)
                        {
                            if (task.Issue.ExistsInTimesheet == true)
                            {
                                bold = "font-weight: bold;";
                            }
                            else
                            {
                                bold = "font-weight: normal;";
                            }

                            if (task.Issue.Subtasks.Count > 0)
                            {
                                remainingEstimate = task.Issue.TotalRemaining;
                            }
                            else
                            {
                                remainingEstimate = task.Issue.RemainingEstimate;
                            }
                            if (task.Issue.RemainingEstimateSeconds == 0)
                            {
                                color = "red";
                            }
                            else
                            {
                                color = "black";
                            }
                            if (task.Issue.TimeSpent > 0 || task.Issue.Assignee != null)
                            {
                                openParentheses = "(";
                                closedParantheses = ")";
                            }
                            else
                            {
                                openParentheses = "";
                                closedParantheses = "";
                            }
                            <div style="margin-top: 10px;">
                                <span style="font-family: Segoe UI Symbol">&#10065;</span>
                                <a style="text-decoration: none; @bold;" href="@task.Issue.Link">@task.Issue.Summary</a>
                                <span style="color: #888;"> &#x25cf; @task.Issue.Key </span>
                                @if (task.Issue.Assignee != null)
                                {
                                 <span style="white-space:nowrap;"> &#x25cf; @task.Issue.Assignee</span>
                                }

                                @if (task.Issue.TimeSpent > 0)
                                {
                                    <span> &#x25cf; @task.Issue.TimeLogged worked </span>
                                    <span style="color:@color"> &#x25cf; @remainingEstimate left </span>
                                }
                               
                                @if (task.Issue.Status == Model.policy.ReopenedStatus)
                                {
                                    <span style="white-space:nowrap; font-weight:normal">
                                        &#x25cf;
                                        <i><u> Reopened</u></i>
                                    </span>
                                }
                                else
                                {
                                    if (task.Issue.TimeSpent > 0)
                                    {
                                        <span style="white-space:nowrap; font-weight:normal">
                                            &#x25cf;
                                            <i><u>Paused</u></i>
                                        </span>
                                    }
                                }
                            </div>
                            if (task.Issue.SubtasksIssues != null)
                            {
                                if (task.Issue.SubtasksIssues.Count > 0)
                                {
                                    foreach (var subtask in task.Issue.SubtasksIssues)
                                    {
                                        if (subtask.ExistsInTimesheet == true)
                                        {
                                            bold = "font-weight: bold;";
                                        }
                                        else
                                        {
                                            bold = "font-weight: normal;";
                                        }
                                        if (subtask.RemainingEstimateSeconds == 0)
                                        {
                                            color = "red";
                                        }
                                        else
                                        {
                                            color = "black";
                                        }
                                        <div style="margin-top:10px; margin-left:20px;">
                                            <span style="font-family: Segoe UI Symbol">
                                                @if (subtask.Resolution != null)
                                                {
                                                    <span style="@bold;">&#10004;</span>
                                                }
                                                else
                                                { <span>&#10065;</span>}

                                            </span>
                                            <a style="text-decoration: none" href="@subtask.Link">@subtask.Summary</a>
                                            <span style="color:#888;"> &#x25cf; @subtask.Key</span>
                                            @if (subtask.Assignee != null)
                                            {
                                                <span style="white-space:nowrap;"> &#x25cf; @subtask.Assignee</span>
                                            }
                                                @if (subtask.TimeSpent > 0)
                                                {
                                                    <span> &#x25cf; @subtask.TimeLogged worked </span>
                                                    if (subtask.Resolution == null)
                                                    {
                                                        <span style="color:@color;"> &#x25cf; @subtask.RemainingEstimate left </span>
                                                    }
                                                }

                                              
                                            @if (subtask.Resolution != null)
                                            {
                                                <i style="white-space:nowrap; font-weight:bold"> &#x25cf; @subtask.Status</i>
                                            }
                                            else
                                            {
                                                <i style="white-space:nowrap; font-weight:normal"> &#x25cf; @subtask.Status</i>
                                            }
                                        </div>
                                    }
                                }
                            }
                        }
                    }
                </div>
            }
            
        @if (Model.SprintReport.CompletedTasksList != null)
        {
            foreach (var completedTasks in Model.SprintReport.CompletedTasksList)
            {
                if (DateTime.Compare(completedTasks.Tasks.First().ResolutionDate, Model.options.FromDate) < 0)
                {
                    <div style="margin-top:30px">
                        <h4>Completed @completedTasks.CompletedTimeAgo (@completedTasks.Tasks.Count)</h4>
                        @foreach (var task in completedTasks.Tasks)
                        {

                            if (DateTime.Compare(task.ResolutionDate, Model.options.FromDate) >= 0 && DateTime.Compare(task.ResolutionDate, DateTime.Today) <= 0)
                            {
                                bold = "font-weight: bold;";
                            }
                            else
                            {
                                bold = "font-weight: normal;";
                            }
                            <div style="margin-top: 10px; @bold">
                                <span style="font-family: Segoe UI Symbol">&#10004;</span>
                                <a style="text-decoration: none" href="@task.Issue.Link">@task.Issue.Summary</a>
                                <span style="color: #B8B8B8;"> &#x25cf; @task.Issue.Key </span>
                                @if (task.Issue.Assignee != null)
                                {
                                    <span style="white-space:nowrap"> &#x25cf; @task.Issue.Assignee </span>
                                }
                            </div>
                        }
                    </div>
                }

            }
        }
            
        <div style="margin-top:40px;">
            <i>Tasks in bold have work logged in the timesheet.</i>
        </div>

    </div>   

</div>
