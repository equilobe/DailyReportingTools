<div style="margin-top:15px;">
      @if(Model.options.FromDate==Model.options.ToDate)
        {
           <h2> @Model.Title Daily Report for @Model.Date.ToString("dddd, dd MMMM yyyy") </h2>
        }
        else
        {
           <h2>@Model.Title Daily Report for @Model.options.FromDate.ToString("dddd, dd MMMM yyyy") - @Model.options.ToDate.ToString("dddd, dd MMMM yyyy")</h2>
        }  
    @{
        var bold = "";
        var remainingEstimate = "";
        var color="black";
        var tasks="";
        var comma = "";
     }
  
    <div style="margin-top: 40px">
        <h2>Summary</h2>
            @if (Model.Summary.TotalTimeSeconds == 0)
            {
               <h2 style="font-weight:normal">No work logged</h2>
            }
            else
            {
                <h2 style="font-weight:normal"> @Model.Summary.TotalTime worked</h2>
            }
            @if(Model.Summary.InProgressTasksCount>0)
            {
                <div style="margin-top:10px;">
                    <span>@Model.Summary.InProgressTasksCount </span>
                    @if(Model.Summary.InProgressTasksCount==1)
                    {
                        <span> task </span>
                    }
                    else
                    {
                         <span> tasks </span>
                    }
                   <span>in progress</span>
                   <span style="font-size:0;">
                       <span style="font-size:13px;">(</span>
                       @if(Model.Summary.InProgressTasksTimeLeftSeconds==0)
                       {
                           <span style="color:red;font-size:13px;">@Model.Summary.InProgressTasksTimeLeft left</span>
                       }
                       else
                       {
                           <span style="font-size:13px;">@Model.Summary.InProgressTasksTimeLeft left</span>
                       }
                       @if(Model.Summary.InProgressUnassigned>0)
                       {
                           <span style="font-size:13px">, @Model.Summary.InProgressUnassigned unassigned</span>
                       }
                       <span style="font-size:13px;">)</span>
                   </span>
                </div>
            }
            
            @if(Model.Summary.OpenTasksCount>0)
            {
                <div style="margin-top:10px;">
                    <span>@Model.Summary.OpenTasksCount </span>
                    @if (Model.Summary.OpenTasksCount == 1)
                    {
                        <span> task </span>
                    }
                    else
                    {
                        <span> tasks </span>
                    }
                    <span>upcoming</span>
                    <span style="font-size:0;">
                        @if (Model.Summary.OpenTasksTimeLeftSeconds > 0 && Model.Summary.OpenUnassigned > 0)
                        {
                            comma = ", ";
                        }
                        @if(Model.Summary.OpenTasksTimeLeftSeconds>0 || Model.Summary.OpenUnassigned>0)
                        {
                            <span style="font-size:13px;">(</span>
                            if(Model.Summary.OpenTasksTimeLeftSeconds>0)
                            {
                                <span style="font-size:13px">@Model.Summary.OpenTasksTimeLeft left</span>
                            }
                            <span style="font-size:13px">@comma</span>
                            if(Model.Summary.OpenUnassigned>0)
                            {
                                <span style="font-size:13px">@Model.Summary.OpenUnassigned unassigned</span>
                            }
                            <span style="font-size:13px">)</span>
                        }
                    </span>
                </div>
            }
            
            @if (Model.Summary.AuthorsInvolved>0)
            {
                <div style="margin-top:10px">
                    <span>@Model.Summary.AuthorsInvolved people involved</span>
                </div>                
            }
    </div>
    <div style="margin-top:40px">
        @if(Model.Authors.Count>0)
        { 
              foreach (var author in Model.Authors)
                {
                    <div style="margin-top:40px;">
                        <b style="font-size:large;">@author.Name </b>
                        @if(author.Issues!=null)
                        {
                            <span> &#x25cf; @author.TimeLogged worked </span>
                        }                        
                        @if (author.InProgressTasksCount>0)
                        {
                            <span> &#x25cf; @author.InProgressTasksCount </span>
                            if (author.InProgressTasksCount==1)
                            {
                                <span> task in progress</span>
                            }
                            else
                            {
                                <span> tasks in progress</span>
                            }
                        }
                        @if(author.OpenTasksCount>0)
                        {
                            <span> &#x25cf; @author.OpenTasksCount </span>
                            if(author.OpenTasksCount==1)
                            {
                                <span> upcoming task </span>
                            }
                            else
                            {
                                <span> upcoming tasks </span>
                            }                            
                        }
                        @if(author.Issues!=null)
                        {
                         <div style="margin-top:20px; line-height:1.4em;">
                            <b> Worked  &#x25cf; @author.Issues.Count </b>
                            @if(author.Issues.Count==0)
                            {
                                <b> task </b>
                            }
                            else
                            {
                                <b>task</b>
                            }
                            <b> &#x25cf; @author.TimeLogged </b>
                            @foreach (var issue in author.Issues)
                            {
                                if (issue.Subtasks.Count > 0)
                                {
                                    remainingEstimate = issue.TotalRemaining;
                                }
                                else
                                {
                                    remainingEstimate = issue.RemainingEstimate;
                                }
                                <div>
                                    <span>@issue.TimeLogged</span>
                                    @if (issue.Label != Model.policy.PermanentTaskLabel)
                                    {
                                        if (issue.Resolution != null)
                                        {
                                            <span style="font-size:0;">
                                                <span style="font-size:13px;">(</span>
                                                <span style="font-size:13px">@issue.Resolution</span>
                                                @if (issue.Subtasks.Count > 0)
                                                {
                                                    if (issue.TotalRemainingSeconds > 0)
                                                    {
                                                        <span style="font-size:13px; color:red; font-weight:bold;">, @remainingEstimate from subtasks</span>
                                                    }
                                                }                                              
                                               <span style="font-size:13px;">)</span>
                                            </span>                                                                                  
                                        }

                                        else if (issue.RemainingEstimate != null)
                                        {
                                            if (issue.TotalRemainingSeconds == 0)
                                            {                                                
                                                    <span>(<b style="color:red; font-weight:bold;">@remainingEstimate left</b>)</span>                                                                                                                                        
                                            }
                                            else
                                            {
                                                <span> (@remainingEstimate left) </span>
                                            }
                                        }
                                    }
                                    @if (issue.SubTask == true)
                                    {
                                        <span> - <a href=@issue.Parent.Link style="text-decoration: none"> @issue.Parent.Summary </a><span style="color: #B8B8B8;"> &#x25cf; @issue.Parent.Key </span>  &#x25cf; <a href=@issue.Link style="text-decoration: none"> @issue.Summary</a> <span style="color: #B8B8B8"> &#x25cf; @issue.Key </span></span>
                                    }
                                    else
                                    {
                                        <span> - <a href=@issue.Link style="text-decoration: none"> @issue.Summary</a> <span style="color: #B8B8B8"> &#x25cf; @issue.Key </span></span>
                                    }
                                    @if (issue.Label != Model.policy.PermanentTaskLabel)
                                    {
                                        if (issue.Assignee == null)
                                        {
                                            <span> &#x25cf; Unassigned</span>
                                        }
                                        else if (issue.Assignee != author.Name)
                                        {
                                            <span style="white-space:nowrap"> &#x25cf; @issue.Assignee</span>
                                        }
                                    }
                                    @foreach (var entry in issue.Entries)
                                    {
                                        <div>
                                            @if (entry.Comment != "")
                                            {
                                                <div>
                                                    @foreach (string comment in entry.Comment.Split('\n'))
                                                    {
                                                        <div style="margin-left:35px"> @comment</div>
                                                    }
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            }
                         </div>
                        }
                        @if(author.InProgressTasksCount>0)
                        {
                            <div style="margin-top:20px; line-height:1.4em;">
                                <b>In Progress (@author.InProgressTasksCount </b>
                                    @if(author.InProgressTasksCount==1)
                                    {
                                    <b> task, </b>
                                    }
                                    else
                                    {
                                    <b> tasks, </b>
                                    }
                                @if (author.InProgressTasksTimeLeftSeconds == 0)
                                {
                                    
                                    <b style="color:red"> @author.InProgressTasksTimeLeft left</b><b>)</b>
                                }
                                else
                                {
                                    <b> @author.InProgressTasksTimeLeft left)</b>
                                }
                                @foreach(var task in author.InProgressTasks)
                                {
                                     if (task.Issue.Label != Model.policy.PermanentTaskLabel && task.Issue.SubTask == false)
                                        {
                                            if (task.Issue.ExistsInTimesheet == true)
                                            {
                                                bold = "font-weight: bold;";
                                            }
                                            else
                                            {
                                                bold = "font-weight: normal;";
                                            }

                                            if (task.Issue.Subtasks.Count > 0)
                                            {
                                                remainingEstimate = task.Issue.TotalRemaining;
                                            }
                                            else
                                            {
                                                remainingEstimate = task.Issue.RemainingEstimate;
                                            }
                                            <div>
                                                <span style="font-family: Wolfram Alpha; font-size:10.5pt">&#9658;</span>
                                                @if(DateTime.Compare(task.Issue.Created, DateTime.Today.AddDays(-1))>=0)
                                                {
                                                    <b> NEW: </b>
                                                }                                                                    
                                                <a style="text-decoration: none; @bold;" href="@task.Issue.Link">@task.Issue.Summary</a>
                                                <span style ="color: #B8B8B8"> &#x25cf; @task.Issue.Key </span>
                                                @if(task.Issue.Subtasks.Count==0)
                                                {
                                                    if (task.Issue.TimeSpent > 0)
                                                    {
                                                        <span> &#x25cf; @task.Issue.TimeLogged worked </span>
                                                        if(task.Issue.RemainingEstimateSeconds==0)
                                                        {
                                                            <span style="color:red; font-weight:bold;"> &#x25cf; @remainingEstimate left</span>
                                                        }
                                                        else
                                                        {
                                                            <span> &#x25cf; @remainingEstimate left</span>
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    if (task.Issue.TimeSpentTotal > 0)
                                                    {
                                                        <span> &#x25cf; @task.Issue.TimeLoggedTotal worked </span>
                                                        if (task.Issue.TotalRemainingSeconds == 0)
                                                        {
                                                            <span style="color:red; font-weight:bold">&#x25cf; @remainingEstimate left</span>
                                                        }
                                                        else
                                                        {
                                                            <span> &#x25cf; @remainingEstimate left</span>
                                                        }                                               
                                                    }
                                                }                                                                                                                                                                                            
                                            </div>
                                            if (task.Issue.SubtasksIssues != null)
                                            {
                                                if (task.Issue.SubtasksIssues.Count > 0)
                                                {
                                                    foreach (var subtask in task.Issue.SubtasksIssues)
                                                    {
                                                        if(subtask.Assignee==author.Name)
                                                        {
                                                           if (subtask.ExistsInTimesheet == true)
                                                           {
                                                               bold = "font-weight: bold;";
                                                           }
                                                           else
                                                           {
                                                               bold = "font-weight: normal;";
                                                           }
                                                           if (subtask.RemainingEstimateSeconds == 0)
                                                           {
                                                               color = "red";
                                                           }
                                                           else
                                                           {
                                                               color = "black";
                                                           }                                 
                                                        <div style="margin-left: 20px">
                                                                @if (subtask.Resolution != null)
                                                                {
                                                                    <span style="font-size:10.5pt;">&#10004;</span>
                                                                }
                                                                else if(subtask.StatusCategory.name == "In Progress")
                                                                {
                                                                    <span style="font-size: 10.5pt; font-family: Wolfram Alpha;">&#9658;</span>
                                                                    if(DateTime.Compare(subtask.Created, DateTime.Today.AddDays(-1))>=0)
                                                                    {
                                                                        <b> NEW: </b>
                                                                    }                  
                                                                }
                                                                else
                                                                { 
                                                                    <span style="font-size: 10.5pt; font-family: Segoe UI Symbol;">&#10065;</span>
                                                                    if(DateTime.Compare(subtask.Created, DateTime.Today.AddDays(-1))>=0)
                                                                    {
                                                                        <b> NEW: </b>
                                                                    }                  
                                                                    if(subtask.Status == Model.policy.ReopenedStatus)
                                                                    {
                                                                         <span style="font-weight:bold">Reopened:</span>
                                                                    }                                                         
                                                                    else if(subtask.TimeSpent>0)
                                                                    {
                                                                        <span style="font-weight:bold">Paused:</span>
                                                                    }                                                       
                                                                }
                                                            <a style="text-decoration: none; @bold;" href="@subtask.Link">@subtask.Summary</a>
                                                            <span style="color: #B8B8B8;"> &#x25cf; @subtask.Key </span>

                                                            @if (subtask.TimeSpent > 0)
                                                            {
                                                                <span> &#x25cf; @subtask.TimeLogged worked </span>                                                               
                                                            }
                                                            @if(subtask.OriginalEstimateSeconds>0)
                                                            {
                                                                 if (subtask.Resolution == null)
                                                                 {
                                                                     <span style="color:@color;"> &#x25cf; @subtask.RemainingEstimate left </span>
                                                                 }                                                                 
                                                            }
                                                        </div>  
                                                        }                                                       
                                                    }
                                                }
                                            }

                                        }
                                }
                                
                           </div>
                        }   
                        
                        @if(author.OpenTasksCount>0)
                        {
                            <div style="margin-top:20px;line-height:1.4em;">
                                <span style="font-size:0; font-weight:bold;">
                                    <span style="font-size:13px;">Upcoming (@author.OpenTasksCount </span>
                                    @if(author.OpenTasksCount == 1)
                                    {
                                        <span style="font-size:13px;"> task</span>
                                    }
                                    else
                                    {
                                        <span style="font-size:13px;"> tasks</span>
                                    }
                                    @if (author.OpenTasksTimeLeftSeconds != 0)                     
                                    {
                                        <span style="font-size:13px">, @author.OpenTasksTimeLeft left</span>
                                    }
                                    <span style="font-size:13px;">)</span>
                                 </span>
                            @foreach (var task in author.OpenTasks)
                            {
                                if (task.Issue.Label != Model.policy.PermanentTaskLabel && task.Issue.SubTask == false)
                                {
                                    if (task.Issue.ExistsInTimesheet == true)
                                    {
                                        bold = "font-weight: bold;";
                                    }
                                    else
                                    {
                                        bold = "font-weight: normal;";
                                    }

                                    if (task.Issue.Subtasks.Count > 0)
                                    {
                                        remainingEstimate = task.Issue.TotalRemaining;
                                    }
                                    else
                                    {
                                        remainingEstimate = task.Issue.RemainingEstimate;
                                    }
                                    if (task.Issue.RemainingEstimateSeconds == 0 && task.Issue.OriginalEstimateSeconds>0)
                                    {
                                        color = "red";
                                    }
                                    else
                                    {
                                        color = "black";
                                    }
                                    <div>
                                        <span style="font-family: Segoe UI Symbol; font-size: 10.5pt">&#10065;</span>
                                        @if (DateTime.Compare(task.Issue.Created, DateTime.Today.AddDays(-1)) >= 0)
                                        {
                                            <b> NEW: </b>
                                        }                  
                                        @if (task.Issue.Status == Model.policy.ReopenedStatus)
                                        {
                                                <b>Reopened: </b>
                                        }
                                        else
                                        {
                                            if (task.Issue.TimeSpent > 0)
                                            {
                                                   <b>Paused: </b>
                                            }
                                        }
                                        <a style="text-decoration: none; @bold;" href="@task.Issue.Link">@task.Issue.Summary</a>
                                        <span style="color: #B8B8B8;"> &#x25cf; @task.Issue.Key </span>

                                        @if (task.Issue.Subtasks.Count == 0)
                                        {
                                            if (task.Issue.TimeSpent > 0)
                                            {
                                               <span> &#x25cf; @task.Issue.TimeLogged worked </span>
                                                if (task.Issue.RemainingEstimateSeconds == 0)
                                                {
                                                   <span style="color:red; font-weight:bold;"> &#x25cf; @remainingEstimate left</span>
                                                }
                                                else
                                                {
                                                   <span> &#x25cf; @remainingEstimate left</span>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            if (task.Issue.TimeSpentTotal > 0)
                                            {
                                               <span> &#x25cf; @task.Issue.TimeLoggedTotal worked </span>
                                                if (task.Issue.TotalRemainingSeconds == 0)
                                                {
                                                   <span style="color:red; font-weight:bold">&#x25cf; @remainingEstimate left</span>
                                                }
                                                else
                                                {
                                                   <span> &#x25cf; @remainingEstimate left</span>
                                                }
                                            }
                                        }                                                                                                                                                                                                                                                                                        
                                        @if (task.HasInProgressAuthor == true)
                                        {
                                             <span style="color:red"> &#x25cf; has sub-tasks in progress </span>
                                        }
                                                                
                                    </div>
                                    if (task.Issue.SubtasksIssues != null)
                                    {
                                        if (task.Issue.SubtasksIssues.Count > 0)
                                        {                                            
                                            foreach (var subtask in task.Issue.SubtasksIssues)
                                            {
                                                if(subtask.Assignee == author.Name)
                                                {                                                  
                                                    if (subtask.ExistsInTimesheet == true)
                                                    {
                                                        bold = "font-weight: bold;";
                                                    }
                                                    else
                                                    {
                                                        bold = "font-weight: normal;";
                                                    }
                                                    if (subtask.RemainingEstimateSeconds == 0)
                                                    {
                                                        color = "red";
                                                    }
                                                    else
                                                    {
                                                        color = "black";
                                                    }
                                                <div style="margin-left:20px;">
                                                       @if (subtask.Resolution != null)
                                                       {
                                                           <span style="font-size:10.5pt;">&#10004;</span>
                                                       }
                                                       else if (subtask.StatusCategory.name == "In Progress")
                                                       {
                                                           <span style="font-size: 10.5pt; font-family: Wolfram Alpha;">&#9658;</span>
                                                           if(DateTime.Compare(subtask.Created, DateTime.Today.AddDays(-1))>=0)
                                                           {
                                                               <b> NEW: </b>
                                                           }                  
                                                       }
                                                       else
                                                       {
                                                           <span style="font-size: 10.5pt; font-family: Segoe UI Symbol;">&#10065;</span>
                                                           if(DateTime.Compare(subtask.Created, DateTime.Today.AddDays(-1))>=0)
                                                           {
                                                               <b> NEW: </b>
                                                           }      
                                                           if (subtask.Status == Model.policy.ReopenedStatus)
                                                           {
                                                               <span style="font-weight:bold">Reopened</span>
                                                           }
                                                           else if (subtask.TimeSpent > 0)
                                                           {
                                                               <span style="font-weight:bold">Paused</span>
                                                           }
                                                       }
                                                    <a style="text-decoration: none" href="@subtask.Link">@subtask.Summary</a>
                                                    <span style="color: #B8B8B8;"> &#x25cf; @subtask.Key</span>
                                                        @if (subtask.TimeSpent > 0)
                                                        {
                                                            <span> &#x25cf; @subtask.TimeLogged worked </span>                                                            
                                                        }
                                                        @if (subtask.OriginalEstimateSeconds>0)
                                                        {
                                                            if (subtask.Resolution == null)
                                                            {
                                                                <span style="color:@color;"> &#x25cf; @subtask.RemainingEstimate left </span>
                                                            }
                                                        }
                                                </div>
                                                }                                               
                                            }
                                        }
                                    }
                                }
                            }
                            </div>
                        }                    
                    </div>                       
                }
            }
        </div>

            @if (Model.Sprint.UnassignedCount>0)
            {
                if(Model.Sprint.UnassignedCount==1)
                {
                    tasks = "task";
                }
               else
                {
                    tasks = "tasks";
                }
                <div style="margin-top:60px; line-height:1.4em;">
                    <h2>Unassigned (@Model.Sprint.UnassignedCount @tasks)</h2>
                    @foreach (var task in Model.Sprint.UnassignedTasks)
                    {
                        if (task.Issue.Label != Model.policy.PermanentTaskLabel && task.Issue.SubTask == false)
                        {
                            if (task.Issue.ExistsInTimesheet == true)
                            {
                                bold = "font-weight: bold;";
                            }
                            else
                            {
                                bold = "font-weight: normal;";
                            }

                            if (task.Issue.Subtasks.Count > 0)
                            {
                                remainingEstimate = task.Issue.TotalRemaining;
                            }
                            else
                            {
                                remainingEstimate = task.Issue.RemainingEstimate;
                            }
                            if (task.Issue.RemainingEstimateSeconds == 0)
                            {
                                color = "red";
                            }
                            else
                            {
                                color = "black";
                            }
                            <div>
                                @if(task.Issue.StatusCategory.name == "In Progress")
                                {
                                    <span style="font-family: Wolfram Alpha; font-size:10.5pt">&#9658;</span>
                                }
                                else if(task.Issue.Resolution == null)
                                {
                                    <span style="font-family: Segoe UI Symbol; font-size: 10.5pt">&#10065;</span>
                                }                                
                                @if (DateTime.Compare(task.Issue.Created, DateTime.Today.AddDays(-1)) >= 0)
                                {
                                    <b> NEW: </b>
                                }
                                @if (task.Issue.Status == Model.policy.ReopenedStatus)
                                {
                                    <b>Reopened: </b>
                                }
                                else
                                {
                                    if (task.Issue.TimeSpent > 0)
                                    {
                                        <b>Paused: </b>
                                    }
                                }
                                
                                <a style="text-decoration: none; @bold;" href="@task.Issue.Link">@task.Issue.Summary</a>
                                <span style="color: #B8B8B8"> &#x25cf; @task.Issue.Key </span>
                                @if (task.Issue.Assignee != null)
                                {
                                    <span style="white-space: nowrap;"> &#x25cf; @task.Issue.Assignee</span>
                                }
                                @if (task.Issue.Subtasks.Count == 0)
                                {
                                    if (task.Issue.TimeSpent > 0)
                                    {
                                       <span> &#x25cf; @task.Issue.TimeLogged worked </span>
                                        if (task.Issue.RemainingEstimateSeconds == 0)
                                        {
                                           <span style="color:red; font-weight:bold;"> &#x25cf; @remainingEstimate left</span>
                                        }
                                        else
                                        {
                                           <span> &#x25cf; @remainingEstimate left</span>
                                        }
                                    }
                                }
                                else
                                {
                                    if (task.Issue.TimeSpentTotal > 0)
                                    {
                                       <span> &#x25cf; @task.Issue.TimeLoggedTotal worked </span>
                                        if (task.Issue.TotalRemainingSeconds == 0)
                                        {
                                           <span style="color:red; font-weight:bold">&#x25cf; @remainingEstimate left</span>
                                        }
                                        else
                                        {
                                           <span> &#x25cf; @remainingEstimate left</span>
                                        }
                                    }
                                }
                                                              
                                @if (task.HasInProgress == true)
                                {
                                    <span style="color:red"> &#x25cf; has sub-tasks in progress</span>
                                }
                            </div>
                            if (task.Issue.SubtasksIssues != null)
                            {
                                if (task.Issue.SubtasksIssues.Count > 0)
                                {                                    
                                    foreach (var subtask in task.Issue.SubtasksIssues)
                                    {
                                        if (subtask.Resolution == null && subtask.Assignee == null)                                       
                                        {
                                            if (subtask.ExistsInTimesheet == true)
                                            {
                                                bold = "font-weight: bold;";
                                            }
                                            else
                                            {
                                                bold = "font-weight: normal;";
                                            }
                                            if (subtask.RemainingEstimateSeconds == 0)
                                            {
                                                color = "red";
                                            }
                                            else
                                            {
                                                color = "black";
                                            }
                                            <div style="margin-left: 20px">
                                                @if (subtask.StatusCategory.name == "In Progress")
                                                {
                                                    <span style="font-size: 10.5pt; font-family: Wolfram Alpha;">&#9658;</span>
                                                    if (DateTime.Compare(subtask.Created, DateTime.Today.AddDays(-1)) >= 0)
                                                    {
                                                        <b> NEW: </b>
                                                    }
                                                }
                                                else
                                                {
                                                    <span style="font-size: 10.5pt; font-family: Segoe UI Symbol;">&#10065;</span>
                                                    if (DateTime.Compare(subtask.Created, DateTime.Today.AddDays(-1)) >= 0)
                                                    {
                                                        <b> NEW: </b>
                                                    }
                                                    if (subtask.Status == Model.policy.ReopenedStatus)
                                                    {
                                                        <span style="font-weight:bold">Reopened:</span>
                                                    }
                                                    else if (subtask.TimeSpent > 0)
                                                    {
                                                        <span style="font-weight:bold">Paused:</span>
                                                    }
                                                }
                                                <a style="text-decoration: none; @bold;" href="@subtask.Link">@subtask.Summary</a>
                                                <span style="color: #B8B8B8;"> &#x25cf; @subtask.Key </span>
                                                @if (subtask.TimeSpent > 0)
                                                {
                                                    <span> &#x25cf; @subtask.TimeLogged worked </span>
                                                    if (subtask.Resolution == null)
                                                    {
                                                        <span style="color:@color;"> &#x25cf; @subtask.RemainingEstimate left </span>
                                                    }
                                                }
                                            </div>

                                            }
                                        }
                                    
                                }
                            }

                        }
                    }
                        
                </div>
            }       

            
        @if (Model.Sprint.CompletedTasksList != null)
        {
            <div style="margin-top:60px">
                <h2>Completed last 7 days</h2>
                @foreach (var completedTasks in Model.Sprint.CompletedTasksList)
                {
                        <div style="margin-top:20px; line-height:1.4em;">
                            <b>Completed @completedTasks.CompletedTimeAgo (@completedTasks.Tasks.Count)</b>
                            @foreach (var task in completedTasks.Tasks)
                            {

                                if (task.Issue.ExistsInTimesheet == true)
                                {
                                    bold = "font-weight: bold;";
                                }
                                else
                                {
                                    bold = "font-weight: normal;";
                                }
                                <div>
                                    <span style="font-family: Segoe UI Symbol; font-size: 10.5pt">&#10004;</span>
                                    <a style="text-decoration: none" href="@task.Issue.Link">@task.Issue.Summary</a>
                                    <span style="color: #B8B8B8;"> &#x25cf; @task.Issue.Key </span>
                                    @if (task.Issue.Assignee != null)
                                    {
                                        <span style="white-space:nowrap"> &#x25cf; @task.Issue.Assignee </span>
                                    }
                                    else
                                    {
                                        <span style="white-space:nowrap"> &#x25cf; Unassigned </span>
                                    }
                                    @if (task.Issue.RemainingEstimateSeconds != 0)
                                    {
                                        <span style="white-space:nowrap"> &#x25cf; @task.Issue.RemainingEstimate </span>
                                    }    
                                </div>
                            }
                        </div>
                }
           </div>
        } 
</div>
